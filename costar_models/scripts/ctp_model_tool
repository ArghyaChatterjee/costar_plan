#!/usr/bin/env python

from costar_models import *
from costar_models.datasets.npz import NpzDataset

def main(args):
    if 'cpu' in args and args['cpu']:
        import tensorflow as tf
        import keras.backend as K

        with tf.device('/cpu:0'):
            config = tf.ConfigProto(
                device_count={'GPU': 0}
            )
            sess = tf.Session(config=config)
            K.set_session(sess)

    data_file_info = args['data_file'].split('.')
    data_type = data_file_info[-1]
    if data_type == "npz":
        data = NpzDataset(data_file_info[0]).load()
    else:
        raise NotImplementedError('data type not implemented: %s'%data_type)

    if 'model' in args and args['model'] is not None:
        model = MakeModel(taskdef=None, **args)
        if 'load_model' in args and args['load_model']:
            model.load(env.world)
        try:
            model.train(**data)
        except KeyboardInterrupt, e:
            pass
        model.save()
        if args['debug_model']:
            model.plot(env)
            try:
                while True:
                    time.sleep(0.1)
            except Exception, e:
                pass
    else:
        pass

if __name__ == '__main__':
    args = ParseModelArgs()
    if args['profile']:
        import cProfile
        cProfile.run('main(args)')
    else:
        main(args)
