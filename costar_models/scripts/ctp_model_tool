#!/usr/bin/env python

from costar_models import *
from costar_models.datasets.npz import NpzDataset
from costar_models.datasets.npy_generator import NpzGeneratorDataset

'''
Tool for running model training without the rest of the simulation/planning/ROS
code. This should be more or less independent and only rely on a couple
external features.
'''

def main(args):
    if 'cpu' in args and args['cpu']:
        import tensorflow as tf
        import keras.backend as K

        with tf.device('/cpu:0'):
            config = tf.ConfigProto(
                device_count={'GPU': 0}
            )
            sess = tf.Session(config=config)
            K.set_session(sess)

    data_file_info = args['data_file'].split('.')
    data_type = data_file_info[-1]
    if data_type == "npz":
        root = ""
        for i, tok in enumerate(data_file_info[:-1]):
            if i < len(data_file_info)-1 and i > 0:
                root += '.'
            root += tok
        dataset = NpzGeneratorDataset(root)
        data = dataset.load()
    else:
        raise NotImplementedError('data type not implemented: %s'%data_type)

    if 'model' in args and args['model'] is not None:
        model = MakeModel(taskdef=None, **args)
        print (args)
        if 'load_model' in args and args['load_model']:
            model.load(world=None,**data)
        train_generator = model.trainGenerator(dataset)
        test_generator = model.testGenerator(dataset)
        try:
            # was:
            #model.train(**data)
            model.trainFromGenerators(train_generator, test_generator, data)
        except KeyboardInterrupt:
            pass
        model.save()
        if args['debug_model']:
            model.plot(env)
            try:
                while True:
                    time.sleep(0.1)
            except KeyboardInterrupt:
                pass
    else:
        pass

if __name__ == '__main__':
    args = ParseModelArgs()
    if args['profile']:
        import cProfile
        cProfile.run('main(args)')
    else:
        main(args)
